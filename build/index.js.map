{"version":3,"file":"index.js","mappings":"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","sources":["webpack://add-new-post/external window [\"wp\",\"coreData\"]","webpack://add-new-post/external window [\"wp\",\"data\"]","webpack://add-new-post/external window [\"wp\",\"element\"]","webpack://add-new-post/external window [\"wp\",\"i18n\"]","webpack://add-new-post/external window [\"wp\",\"plugins\"]","webpack://add-new-post/external window [\"wp\",\"url\"]","webpack://add-new-post/webpack/bootstrap","webpack://add-new-post/webpack/runtime/compat get default export","webpack://add-new-post/webpack/runtime/define property getters","webpack://add-new-post/webpack/runtime/hasOwnProperty shorthand","webpack://add-new-post/webpack/runtime/make namespace object","webpack://add-new-post/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"url\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { __ } from \"@wordpress/i18n\";\nimport { useSelect, withSelect } from \"@wordpress/data\";\nimport { store as coreStore } from \"@wordpress/core-data\";\nimport { renderToString } from \"@wordpress/element\";\nimport { addQueryArgs } from \"@wordpress/url\";\nimport { registerPlugin } from \"@wordpress/plugins\";\n\nconst AddNewPostButton = ({ postType, newPost }) => {\n\tif (!postType) {\n\t\treturn null;\n\t}\n\tif (newPost) {\n\t\treturn null;\n\t}\n\n\tconst { singleLabel, addNewLabel } = useSelect((select) => {\n\t\tconst { getPostTypes } = select(coreStore);\n\t\tconst includedPostType = [postType];\n\t\tconst filteredPostTypes = getPostTypes({ per_page: -1 })?.filter(\n\t\t\t({ viewable, slug }) => viewable && includedPostType.includes(slug)\n\t\t);\n\t\tif (undefined !== filteredPostTypes) {\n\t\t\treturn {\n\t\t\t\taddNewLabel: filteredPostTypes[0].labels.add_new,\n\t\t\t\tsingleLabel: filteredPostTypes[0].labels.singular_name,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\taddNewLabel: undefined,\n\t\t\tsingleLabel: undefined,\n\t\t};\n\t});\n\tif (undefined !== addNewLabel) {\n\t\tconst AddButton = (\n\t\t\t<a\n\t\t\t\tclass=\"components-button is-secondary\"\n\t\t\t\tid=\"createwithrani-add-new-button\"\n\t\t\t\thref={addQueryArgs(\"post-new.php\", {\n\t\t\t\t\tpost_type: postType,\n\t\t\t\t})}\n\t\t\t\tstyle={{\n\t\t\t\t\ttextTransform: \"capitalize\",\n\t\t\t\t\tmargin: \"0 1em\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t{sprintf(\n\t\t\t\t\t\t/* translators: %1$s: the phrase \"Add New\", %2$s: Name of current post type. */\n\t\t\t\t\t\t__(\"%1$s %2$s\", \"createwithrani-add-new-post\"),\n\t\t\t\t\t\taddNewLabel,\n\t\t\t\t\t\tsingleLabel\n\t\t\t\t\t)}\n\t\t\t\t</span>\n\t\t\t</a>\n\t\t);\n\t\trequestAnimationFrame(() => {\n\t\t\tif (!document.querySelector(\".edit-post-header-toolbar__left\")) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Redundant extra check added because of a bug where the above check wasn't working, credit: Extendify plugin\n\t\t\tif (document.getElementById(\"createwithrani-add-new-button\")) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdocument\n\t\t\t\t.querySelector(\".edit-post-header-toolbar__left\")\n\t\t\t\t.insertAdjacentHTML(\"beforeend\", renderToString(AddButton));\n\t\t});\n\t}\n\n\treturn null;\n};\nconst AddNewPostButtonWrapped = withSelect((select) => {\n\treturn {\n\t\tpostType: select(\"core/editor\").getCurrentPostType(),\n\t\tnewPost: select(\"core/editor\").isCleanNewPost(),\n\t};\n})(AddNewPostButton);\n\nregisterPlugin(\"createwithrani-add-new-post\", {\n\trender: AddNewPostButtonWrapped,\n});\n"],"names":["__","useSelect","withSelect","store","coreStore","renderToString","addQueryArgs","registerPlugin","AddNewPostButton","postType","newPost","singleLabel","addNewLabel","select","getPostTypes","includedPostType","filteredPostTypes","per_page","filter","viewable","slug","includes","undefined","labels","add_new","singular_name","AddButton","post_type","textTransform","margin","sprintf","requestAnimationFrame","document","querySelector","getElementById","insertAdjacentHTML","AddNewPostButtonWrapped","getCurrentPostType","isCleanNewPost","render"],"sourceRoot":""}